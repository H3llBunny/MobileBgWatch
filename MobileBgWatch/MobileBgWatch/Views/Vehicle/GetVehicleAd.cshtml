@model MobileBgWatch.ViewModels.VehicleViewModel

<div class="d-flex flex-wrap">
    <div class="col-md-6" id="left">
        <div class="carousel-container">
            <div class="carousel slide" id="carousel-main" data-bs-wrap="true">
                <div class="border-top carousel-inner">
                    <div class="carousel-item active">
                        <img class="carousel-image" src="@Model.ImageUrls.FirstOrDefault()" onclick="showImageModal(this.src)" />
                    </div>
                    @foreach (string imageUrl in Model.ImageUrls.Skip(1))
                    {
                        <div class="carousel-item ">
                            <img class="carousel-image" src="@imageUrl" onclick="showImageModal(this.src)" />
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carousel-main" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon"></span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carousel-main" data-bs-slide="next">
                    <span class="carousel-control-next-icon"></span>
                </button>
                <div class="border-top carousel-indicators">
                    <button type="button" class="active" data-bs-target="#carousel-main" data-bs-slide-to="0">
                        <img src="@Model.ImageUrls.FirstOrDefault()" />
                    </button>
                    @for (int i = 1; i < Model.ImageUrls.Count; i++)
                    {
                        <button type="button" data-bs-target="#carousel-main" data-bs-slide-to="@i">
                            <img src="@Model.ImageUrls[i]" />
                        </button>
                    }
                </div>
            </div>
        </div>
        <div class="carousel-indicators-placeholder"></div>
    </div>

    <div class="col-md-6" id="right">
        <div class="border-top info-container">
            <div class="adName">
                @Model.Name
            </div>
            <div class="location">
                <i class="fa-solid fa-earth-europe"></i> @Model.Location
            </div>
            @{
                string currentPriceClass;
                string previousPriceClass;
                if (Model.PreviousPrice.Price != 0)
                {
                    currentPriceClass = Model.CurrentPrice.Price < Model.PreviousPrice?.Price ? "text-success" : "text-danger";
                    previousPriceClass = Model.CurrentPrice.Price < Model.PreviousPrice?.Price ? "text-danger" : "text-success";
                }
                else
                {
                    currentPriceClass = "text-success";
                    previousPriceClass = "text-danger";
                }
            }
            <div class="price_container_vehicle">
                <p class="item_current">
                    <i class="fa-solid fa-money-bill-wave @currentPriceClass"></i> Current price:
                    <span class="item_current_price @currentPriceClass">@Model.CurrentPrice.Price.ToString("N0")</span>
                    <span class="item_current_currency @currentPriceClass">@Model.CurrentPrice.Currency</span>
                    <span class="vat">@(Model.CurrentPrice.IncludeVat ? "(Цената е с включено ДДС)" : "(Не се начислява ДДС)")</span>
                </p>
                <p class="item_previous">
                    <i class="fa-solid fa-money-bill-wave @previousPriceClass"></i> Previous price:
                    <span class="item_previous_price @previousPriceClass">@Model.PreviousPrice.Price.ToString("N0")</span>
                    <span class="item_previous_currency @previousPriceClass">@Model.PreviousPrice.Currency</span>
                    <span class="vat">@(Model.PreviousPrice.Price == 0 ? "" : (Model.PreviousPrice.IncludeVat ? "(Цената е с включено ДДС)" : "(Не се начислява ДДС)"))</span>
                </p>
            </div>
            <div class="date-added">
                <i class="fa-solid fa-calendar-days"></i><span> Дата на добавяне в тракера: @Model.DateAdded.ToString("dd-MM-yyyy")</span>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <img src="" id="modalImage" class="img-fluid" />
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const indicators = document.querySelector('.carousel-indicators');
        const placeholder = document.querySelector('.carousel-indicators-placeholder');

        // Function to update the placeholder size
        function updatePlaceholderSize() {
            const indicatorsRect = indicators.getBoundingClientRect();
            placeholder.style.width = `${indicatorsRect.width}px`;
            placeholder.style.height = `${indicatorsRect.height}px`;
        }

        // Create a ResizeObserver to watch for changes in the size of the indicators
        const resizeObserver = new ResizeObserver(updatePlaceholderSize);

        // Observe the indicators element
        resizeObserver.observe(indicators);

        // Initial size update
        updatePlaceholderSize();
    });
    function showImageModal(src) {
        document.getElementById('modalImage').src = src;
        var imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
        imageModal.show();
    }
</script>
