@model MobileBgWatch.ViewModels.SearchUrlsListViewModel;
@{
    ViewData["Title"] = "Home Page";
}

@{
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger col-md-6">
            @ViewBag.ErrorMessage
        </div>
    }

    @if (TempData["LimitMessage"] != null)
    {
        <div class="alert alert-warning col-md-6">
            @TempData["LimitMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success col-md-6">
            @TempData["SuccessMessage"]
        </div>
    }

    if (User?.Identity?.IsAuthenticated ?? false)
    {
        <div id="searchUrlBox" class="col-md-6">
            <form asp-action="AddSearchUrl" method="post" class="d-flex align-items-center">
                <input id="searchUrlInput" class="form-control me-2" type="text" name="searchUrl" placeholder="Type your mobile.bg search url item link" oninput="checkInput()" />
                <input id="submitButton" class="btn btn-primary" type="submit" value="Add" disabled />
            </form>
        </div>
        @if (Model?.SearchUrls != null)
        {
            @foreach (var url in Model.SearchUrls)
            {
                <h5 id="searchUrlh5">
                    <a class="btn btn-primary refresh-button" asp-action="RefreshAds" asp-route-searchUrl="@url.SearchUrl.ToString()">Refresh</a>
                    <a class="btn btn-primary" asp-controller="AllAds" asp-action="GetAllAds" asp-route-searchUrl="@url.SearchUrl.ToString()">See all (@url.TotalAdsCount)</a>
                    <a class="btn btn-secondary delete-button" href="#" data-url="@url.SearchUrl.ToString()">Delete Link</a>
                    <b>First </b><b class="vehicles_count text-success" style="font-size: 20px; font-weight: bold;">@url.Vehicles.Count()/@url.TotalAdsCount</b> vehicle ads for search link:
                    <b style="font-size: 13px;">@url.SearchUrl</b>
                </h5>
                @if (ViewBag.Message != null)
                {
                    <div class="alert alert-info">@ViewBag.Message</div>
                }
                else
                {
                    <ul class="ul_container">
                        @foreach (var vehicle in url.Vehicles)
                        {
                            string currentPriceClass;
                            string previousPriceClass;
                            bool isVehicleNew = (vehicle.DateAdded.Date >= DateTime.UtcNow.Date.AddDays(-1));

                            if (vehicle.PreviousPrice.Price != 0)
                            {
                                currentPriceClass = vehicle.CurrentPrice.Price < vehicle.PreviousPrice?.Price ? "text-success" : "text-danger";
                                previousPriceClass = vehicle.CurrentPrice.Price < vehicle.PreviousPrice?.Price ? "text-danger" : "text-success";
                            }
                            else
                            {
                                currentPriceClass = "text-success";
                                previousPriceClass = "text-danger";
                            }

                            string vehicleName = vehicle.Name.Length > 60 ? vehicle.Name.Substring(0, 60) + "..." : vehicle.Name;

                            <li class="new_item">
                                @Html.Raw(isVehicleNew ? "<img src=\"/images/new.png\" class=\"new-flag\" />" : "")
                                <a class="no_underline" asp-controller="Vehicle" asp-action="GetVehicleAd" asp-route-vehicleAdId="@vehicle.VehicleAdId">
                                    <div class="item_pic">
                                        <img class="index-image" src="@vehicle.ImageUrl"
                                             title="@vehicle.Name" />
                                    </div>
                                    <div class="name_and_price">
                                        <div class="item_text">
                                            @vehicleName
                                        </div>
                                        <div class="border-top price_container">
                                            <p class="item_current">
                                                Current price:
                                                <span class="item_current_price @currentPriceClass">@vehicle.CurrentPrice.Price.ToString("N0")</span>
                                                <span class="item_current_currency @currentPriceClass">@vehicle.CurrentPrice.Currency</span>
                                            </p>
                                            <p class="item_previous">
                                                Previous price:
                                                <span class="item_previous_price @previousPriceClass">@vehicle.PreviousPrice.Price.ToString("N0")</span>
                                                <span class="item_previous_currency @previousPriceClass">@vehicle.PreviousPrice.Currency</span>
                                            </p>
                                        </div>
                                    </div>
                                </a>
                            </li>
                        }
                    </ul>
                }
            }
        }
    }
    else
    {
        <div class="main-div">
            <div class="text-center">
                <h2 class="welcome-header">Welcome to MobileBgWatch!</h2>
                <p></p>
                <h4>A simple web app that helps you monitor specific searches from mobile.bg.</h4>
            </div>
        </div>
    }
}

<script>
    function checkInput() {
        var inputField = document.getElementById("searchUrlInput");
        var submitButton = document.getElementById("submitButton");
        submitButton.disabled = inputField.value.trim() === "";
    }

    document.addEventListener("DOMContentLoaded", function () {
        checkInput();
    });

    function storeScrollPosition() {
        sessionStorage.setItem('scrollPosition', window.scrollY);
    }

    function restoreScrollPosition() {
        const scrollPosition = sessionStorage.getItem('scrollPosition');
        if (scrollPosition) {
            window.scrollTo(0, parseInt(scrollPosition));
            sessionStorage.removeItem('scrollPosition');
        }
    }

    // Event listener for DOMContentLoaded event (page load)
    document.addEventListener('DOMContentLoaded', restoreScrollPosition);

    document.addEventListener('click', function (event) {
        const refreshButton = event.target.closest('.refresh-button');
        if (refreshButton) {
            window.addEventListener('beforeunload', storeScrollPosition);
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.delete-button').forEach(function (button) {
            button.addEventListener('click', function (event) {
                event.preventDefault();
                var url = button.getAttribute('data-url');
                var confirmation = confirm('Are you sure you want to delete this link?');
                if (confirmation) {
                    window.location.href = 'Home/DeleteUrl?searchUrl=' + encodeURIComponent(url);
                }
            });
        });
    });
</script>